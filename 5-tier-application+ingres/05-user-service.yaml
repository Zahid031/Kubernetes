apiVersion: v1
kind: Service
metadata:
  name: user-service
  namespace: todo-ingress
spec:
  type: ClusterIP
  selector:
    app: user-service
  ports:
  - port: 8000
    targetPort: 8000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service
  namespace: todo-ingress
spec:
  replicas: 1
  selector:
    matchLabels:
      app: user-service
  template:
    metadata:
      labels:
        app: user-service
    spec:
      initContainers:
      - name: wait-deps
        image: busybox:1.36
        command:
        - sh
        - -c
        - |
          until nc -zv postgres.todo-ingress.svc.cluster.local 5432; do echo "waiting for postgres"; sleep 2; done
          until nc -zv rabbitmq.todo-ingress.svc.cluster.local 5672; do echo "waiting for rabbitmq"; sleep 2; done
      containers:
      - name: user-service
        image: zahid03/todo-user-service:latest
        ports:
        - containerPort: 8000
        env:
        - name: DEBUG
          valueFrom:
            configMapKeyRef: {name: app-config, key: DEBUG}
        - name: ALLOWED_HOSTS
          valueFrom:
            configMapKeyRef: {name: app-config, key: ALLOWED_HOSTS}
        - name: CORS_ALLOWED_ORIGINS
          valueFrom:
            configMapKeyRef: {name: app-config, key: CORS_ALLOWED_ORIGINS}
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef: {name: db-secret, key: POSTGRES_DB}
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef: {name: db-secret, key: POSTGRES_USER}
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef: {name: db-secret, key: POSTGRES_PASSWORD}
        - name: DATABASE_URL
          value: postgresql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@postgres.todo-ingress.svc.cluster.local:5432/$(POSTGRES_DB)
        - name: RABBITMQ_USER
          valueFrom:
            secretKeyRef: {name: rabbitmq-secret, key: RABBITMQ_DEFAULT_USER}
        - name: RABBITMQ_PASS
          valueFrom:
            secretKeyRef: {name: rabbitmq-secret, key: RABBITMQ_DEFAULT_PASS}
        - name: RABBITMQ_URL
          value: amqp://$(RABBITMQ_USER):$(RABBITMQ_PASS)@rabbitmq.todo-ingress.svc.cluster.local:5672/
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8000
          initialDelaySeconds: 20
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 10
        command: ["sh","-c"]
        args:
        - |
          python manage.py migrate && python manage.py runserver 0.0.0.0:8000