apiVersion: v1
kind: ConfigMap
metadata:
  name: rabbitmq-config
  namespace: todo-ns
data:
  rabbitmq.conf: |
    heartbeat = 30
    consumer_timeout = 3600000
    handshake_timeout = 10000
    vm_memory_high_watermark.relative = 0.6
    disk_free_limit.relative = 2.0
    collect_statistics_interval = 5000
  enabled_plugins: |
    [rabbitmq_management,rabbitmq_prometheus].
---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq
  namespace: todo-ns
spec:
  selector:
    app: rabbitmq
  ports:
  - name: amqp
    port: 5672
    targetPort: 5672
  - name: mgmt
    port: 15672
    targetPort: 15672
---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq-mgmt
  namespace: todo-ns
spec:
  type: NodePort
  selector:
    app: rabbitmq
  ports:
  - name: mgmt
    port: 15672
    targetPort: 15672
    nodePort: 31672
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
  namespace: todo-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
      - name: rabbitmq
        image: rabbitmq:3-management
        ports:
        - containerPort: 5672
        - containerPort: 15672
        envFrom:
        - secretRef:
            name: rabbitmq-secret
        env:
        - name: RABBITMQ_DEFAULT_USER
          value: "admin"
        - name: RABBITMQ_DEFAULT_PASS
          value: "admin123"
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        readinessProbe:
          exec:
            command: ["sh","-c","rabbitmq-diagnostics -q ping"]
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        livenessProbe:
          exec:
            command: ["sh","-c","rabbitmq-diagnostics -q status"]
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        volumeMounts:
        - name: rabbitmq-data
          mountPath: /var/lib/rabbitmq
        - name: rabbitmq-config
          mountPath: /etc/rabbitmq/rabbitmq.conf
          subPath: rabbitmq.conf
        - name: rabbitmq-config
          mountPath: /etc/rabbitmq/enabled_plugins
          subPath: enabled_plugins
      volumes:
      - name: rabbitmq-data
        persistentVolumeClaim:
          claimName: rabbitmq-pvc
      - name: rabbitmq-config
        configMap:
          name: rabbitmq-config
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: rabbitmq-pvc
  namespace: todo-ns
spec:
  accessModes: ["ReadWriteOnce"]
  storageClassName: nfs-client
  resources:
    requests:
      storage: 2Gi